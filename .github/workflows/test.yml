name: Auto comment on Push and Pull Request

on: 
  pull_request:
    branches: 
      - dev

jobs:
  comment_on_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Code Analysis
        uses: sonarsource/sonarqube-scan-action@v5.2.0
        env:
          SONAR_TOKEN: sqa_acf14b025b0a8a8b841cf761b5267f9fc32fe544
          SONAR_HOST_URL: http://54.84.172.12:9000
        with:
          args: >
            -Dsonar.projectKey=scrapping_poc
            -Dsonar.sources=.
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -Dsonar.login=${{ env.SONAR_TOKEN }}
            -Dsonar.ws.timeout=300
            -Dsonar.ce.ws.timeout=300

      - name: Fetch SonarQube metrics
        env:
          SONAR_TOKEN: sqa_acf14b025b0a8a8b841cf761b5267f9fc32fe544
          SONAR_HOST_URL: http://54.84.172.12:9000
        id: sonarqube
        run: |
          echo "Fetching SonarQube metrics..."
          RESPONSE=$(curl -s -u "${{ env.SONAR_TOKEN }}:" \
            "${{ env.SONAR_HOST_URL }}/api/measures/component?component=scrapping_poc&metricKeys=alert_status)
          
          echo "SonarQube raw response: $RESPONSE"
          
          ALERT_STATUS=$(echo "$RESPONSE" | jq -r '.component.measures[] | select(.metric=="alert_status") | .value // "UNKNOWN"')
          echo "Alter Status result: ${ALERT_STATUS} "


          echo "Parsed metrics:"
          echo "ALERT_STATUS=$ALERT_STATUS"

          echo "ALERT_STATUS=$ALERT_STATUS" >> $GITHUB_ENV

          if [[ "$ALERT_STATUS" == "ERROR" ]]; then
            echo "SONAR_STATUS_ICON=🚨" >> $GITHUB_ENV
            echo "SONAR_STATUS_MESSAGE=❌ Quality Gate FAILED" >> $GITHUB_ENV
          else
            echo "SONAR_STATUS_ICON=✅" >> $GITHUB_ENV
            echo "SONAR_STATUS_MESSAGE=🎉 Quality Gate PASSED" >> $GITHUB_ENV
          fi



name: Auto comment on Push and Pull Request

on: 
  pull_request:
    branches: 
      - dev

jobs:
  comment_on_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Code Analysis
        uses: sonarsource/sonarqube-scan-action@v5.2.0
        env:
          SONAR_TOKEN: sqa_acf14b025b0a8a8b841cf761b5267f9fc32fe544
          SONAR_HOST_URL: http://54.84.172.12:9000
        with:
          args: >
            -Dsonar.projectKey=scrapping_poc
            -Dsonar.sources=.
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -Dsonar.login=${{ env.SONAR_TOKEN }}

      - name: Fetch SonarQube metrics
        env:
          SONAR_TOKEN: sqa_acf14b025b0a8a8b841cf761b5267f9fc32fe544
          SONAR_HOST_URL: http://54.84.172.12:9000
        id: sonarqube
        run: |
          echo "Fetching SonarQube metrics..."
          RESPONSE=$(curl -s -u "${{ env.SONAR_TOKEN }}:" \
            "${{ env.SONAR_HOST_URL }}/api/measures/component?component=scrapping_poc&metricKeys=alert_status")
          
          echo "SonarQube raw response: $RESPONSE"
          
          ALERT_STATUS=$(echo "$RESPONSE" | jq -r '.component.measures[] | select(.metric=="alert_status") | .value // "UNKNOWN"')


          echo "Parsed metrics:"
          echo "ALERT_STATUS=$ALERT_STATUS"

          


      - name: Label PR based on SonarQube result
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")

          if [[ "${{ env.ALERT_STATUS }}" == "ERROR" ]]; then
            LABEL_NAME="sonarqube_failed"
          else
            LABEL_NAME="sonarqube_passed"
          fi

          LABEL_URL="https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/labels"
          JSON_LABEL=$(jq -n --arg label "$LABEL_NAME" '[$label]')

          echo "Adding label $LABEL_NAME to PR #$PR_NUMBER"

          curl -X POST "$LABEL_URL" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$JSON_LABEL"


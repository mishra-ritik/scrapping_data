name: Auto comment on Push and Pull Request

on: 
  pull_request:
    branches: 
      - main
      - dev


# jobs:

#   # test_sonarqube_connection:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: Check HTTP access to sonarqube 
#   #       run: |
#   #         curl -v http://54.158.35.213:9000 || echo "connection failed"
#   #         echo "Hello Jee"

#   comment_on_pr:
#     if: github.event_name == 'pull_request'
#     runs-on: ubuntu-latest
#     env:
#       json_comment: "PR Review: Component: hello, Project: scrapper_project"
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Run Code Analysis
#         uses: sonarsource/sonarqube-scan-action@v5.2.0
#         env:
#           SONAR_TOKEN: sqa_acf14b025b0a8a8b841cf761b5267f9fc32fe544
#           SONAR_HOST_URL: http://54.158.35.213:9000
#         with:
#           args: >
#             -Dsonar.projectKey=scrapping_poc
#             -Dsonar.sources=.
#             -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
#             -Dsonar.login=${{ env.SONAR_TOKEN }}
#             -Dsonar.ws.timeout=300
#             -Dsonar.ce.ws.timeout=300


#           # args: -Dsonar.projectKey=scrapping_poc
#       - name: Comment on pull request
#         run: |
#           PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
#           COMMENT_URL="https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"

#           curl -i -X POST \
#             -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
#             -H "Content-Type: application/json" \
#             -d "{\"body\": \"${json_comment}\"}" \
#             "$COMMENT_URL"

jobs:
  comment_on_pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Code Analysis
        uses: sonarsource/sonarqube-scan-action@v5.2.0
        env:
          # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_TOKEN: sqa_acf14b025b0a8a8b841cf761b5267f9fc32fe544
          SONAR_HOST_URL: http://54.158.35.213:9000
        with:
          args: >
            -Dsonar.projectKey=scrapping_poc
            -Dsonar.sources=.
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -Dsonar.login=${{ env.SONAR_TOKEN }}
            -Dsonar.ws.timeout=300
            -Dsonar.ce.ws.timeout=300

      - name: Fetch SonarQube metrics
        id: sonarqube
        run: |
          AUTH=$(echo "${{ secrets.SONAR_TOKEN }}:" | base64)
          RESPONSE=$(curl -s -X GET \
            --location "${{ env.SONAR_HOST_URL }}/api/measures/component?component=scrapping_poc&metricKeys=alert_status,new_violations,new_coverage,new_duplicated_lines_density,new_security_hotspots" \
            --header "Authorization: Basic $AUTH")
          
          echo "SonarQube response: $RESPONSE"
          
          # Extract metrics
          ALERT_STATUS=$(echo $RESPONSE | jq -r '.component.measures[] | select(.metric=="alert_status") | .value')
          NEW_VIOLATIONS=$(echo $RESPONSE | jq -r '.component.measures[] | select(.metric=="new_violations") | .value')
          NEW_COVERAGE=$(echo $RESPONSE | jq -r '.component.measures[] | select(.metric=="new_coverage") | .value')
          NEW_DUP_LINES=$(echo $RESPONSE | jq -r '.component.measures[] | select(.metric=="new_duplicated_lines_density") | .value')
          NEW_HOTSPOTS=$(echo $RESPONSE | jq -r '.component.measures[] | select(.metric=="new_security_hotspots") | .value')

          echo "ALERT_STATUS=$ALERT_STATUS" >> $GITHUB_ENV
          echo "NEW_VIOLATIONS=$NEW_VIOLATIONS" >> $GITHUB_ENV
          echo "NEW_COVERAGE=$NEW_COVERAGE" >> $GITHUB_ENV
          echo "NEW_DUP_LINES=$NEW_DUP_LINES" >> $GITHUB_ENV
          echo "NEW_HOTSPOTS=$NEW_HOTSPOTS" >> $GITHUB_ENV

      - name: Comment on pull request
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          COMMENT_URL="https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
          BODY="### SonarQube Code Analysis ðŸš¨
          - **Quality Gate:** ${{ env.ALERT_STATUS }}
          - **New Violations:** ${{ env.NEW_VIOLATIONS }}
          - **New Coverage:** ${{ env.NEW_COVERAGE }}%
          - **New Duplicated Lines:** ${{ env.NEW_DUP_LINES }}%
          - **New Security Hotspots:** ${{ env.NEW_HOTSPOTS }}

          [View full report](${{ env.SONAR_HOST_URL }}/dashboard?id=scrapping_poc)
          "

          curl -i -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$BODY\"}" \
            "$COMMENT_URL"
  
